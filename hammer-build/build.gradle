allprojects {
    apply from: rootDir.getAbsolutePath() +  '/java_base.gradle'   
    apply from: rootDir.getAbsolutePath() +  '/maven_push.gradle'   

    dependencies {
        api group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
        api group: 'cn.featherfly.common', name: 'common-api', version: '0.2.4'
        api group: 'cn.featherfly.common', name: 'common-core', version: '1.8.17'		

        testImplementation group: 'org.testng', name: 'testng', version: '7.0.0'
        testImplementation group: 'com.google.inject', name: 'guice', version: '4.2.3'
        testImplementation 'org.slf4j:slf4j-log4j12:1.7.30'
        testImplementation 'log4j:log4j:1.2.17'
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-log4j12:1.7.30'
    implementation 'log4j:log4j:1.2.17'
    //implementation group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.11.RELEASE'
    //implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.9'
}

def publishAllModulesLocal = task("allModulesPublishLocal", group: 'publishing') {}
getSubprojects().each { p ->
    def publishTask = project(":"+ p.name).tasks.findByName("publishMavenJavaPublicationToMavenLocal")
    if (publishTask != null) publishAllModulesLocal.dependsOn(publishTask)
}

def publishAllModulesRepository = task("allModulesPublishRepository", group: 'publishing') {}
getSubprojects().each { p ->
    def publishTask = project(":"+ p.name).tasks.findByName("publishMavenJavaPublicationToMavenRepository")
    if (publishTask != null) publishAllModulesRepository.dependsOn(publishTask)
}
